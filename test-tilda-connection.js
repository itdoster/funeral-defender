#!/usr/bin/env node

// –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ IP –∞–¥—Ä–µ—Å—É –¢–∏–ª—å–¥—ã
const http = require('http');

const TILDA_IP = '45.155.60.8';
const PORT = 80;

console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ${TILDA_IP}...`);

const options = {
    hostname: TILDA_IP,
    port: PORT,
    path: '/',
    method: 'GET',
    timeout: 10000,
    headers: {
        'User-Agent': 'Funeral-Defender-Test/1.0',
        'Host': 'pohorony-minsk.tilda.ws' // –í–∞–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Host
    }
};

const req = http.request(options, (res) => {
    console.log(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
    console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:`, res.headers);
    
    let data = '';
    res.on('data', (chunk) => {
        data += chunk;
    });
    
    res.on('end', () => {
        console.log(`üìÑ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: ${data.length} –±–∞–π—Ç`);
        console.log(`üè† –°–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ "pohorony"?: ${data.toLowerCase().includes('pohorony')}`);
        console.log(`üåê –°–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ "tilda"?: ${data.toLowerCase().includes('tilda')}`);
        
        if (res.statusCode === 200) {
            console.log(`üéâ –û—Ç–ª–∏—á–Ω–æ! IP ${TILDA_IP} –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.`);
        } else {
            console.log(`‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å ${res.statusCode} - –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.`);
        }
    });
});

req.on('error', (err) => {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${err.message}`);
    console.log(`üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:`);
    console.log(`   - IP –∞–¥—Ä–µ—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`);
    console.log(`   - –¢—Ä–µ–±—É–µ—Ç—Å—è HTTPS –≤–º–µ—Å—Ç–æ HTTP`);
    console.log(`   - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ IP`);
});

req.on('timeout', () => {
    console.log(`‚è∞ –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (10 —Å–µ–∫—É–Ω–¥)`);
    req.destroy();
});

req.end();

console.log(`‚è≥ –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç ${TILDA_IP}...`);

