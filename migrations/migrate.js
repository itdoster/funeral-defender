const pool = require('../config/database');

async function runDatabaseMigration() {
    try {
        console.log('üîÑ Running database migration...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è Google Ads –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        const alterQueries = [
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS gclid TEXT',
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS gclsrc TEXT',
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS gbraid TEXT',
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS wbraid TEXT',
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS utm_source TEXT',
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS utm_medium TEXT',
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS utm_campaign TEXT',
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS utm_term TEXT',
            'ALTER TABLE ip_tracking ADD COLUMN IF NOT EXISTS utm_content TEXT'
        ];
        
        for (const query of alterQueries) {
            try {
                await pool.query(query);
                console.log(`‚úÖ Executed: ${query}`);
            } catch (error) {
                if (error.code === '42701') { // Column already exists
                    console.log(`‚ö†Ô∏è  Column already exists: ${query}`);
                } else {
                    console.error(`‚ùå Error executing: ${query}`, error.message);
                }
            }
        }
        
        // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
        const indexQueries = [
            'CREATE INDEX IF NOT EXISTS idx_ip_tracking_gclid ON ip_tracking(gclid)',
            'CREATE INDEX IF NOT EXISTS idx_ip_tracking_utm_campaign ON ip_tracking(utm_campaign)',
            'CREATE INDEX IF NOT EXISTS idx_ip_tracking_utm_source ON ip_tracking(utm_source)'
        ];
        
        for (const query of indexQueries) {
            try {
                await pool.query(query);
                console.log(`‚úÖ Created index: ${query}`);
            } catch (error) {
                console.error(`‚ùå Error creating index: ${query}`, error.message);
            }
        }
        
        console.log('‚úÖ Database migration completed successfully!');
        return true;
        
    } catch (error) {
        console.error('‚ùå Migration failed:', error);
        return false;
    }
}

module.exports = { runDatabaseMigration };
